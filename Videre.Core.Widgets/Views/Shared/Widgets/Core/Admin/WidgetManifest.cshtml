@using System.Collections.Generic;
@using Videre.Core.Extensions;
@using Models = Videre.Core.Models;
@using System.Web.Mvc.Html;
@using Videre.Core.Services;
@using Bootstrap = Videre.Core.Extensions.Bootstrap;
@model Models.Widget

@{
    //Html.RegisterJQGridScript();
    Html.RegisterWebReferenceGroup("datatables");
    Html.RegisterControlPresenter("videre.widgets.admin.widgetmanifest", Model, new { data = Widget.GetWidgetManifests() });
}

<div id="@Model.GetId("Widget")">
    @{Html.RenderPartial("WidgetHeader", Model);}

    @{Html.RenderPartial("WidgetSectionHeader", Model, new ViewDataDictionary(new { SectionHeader = Model.GetText("WidgetTitle.Text", "Widget Manifest Administration") }));}

    <p>@Html.Raw(Model.GetText("Instructions.Text", "The Widget Manifest defines what widgets can be placed in a template.  You can organize your widgets into categories if you like.  Also, if your widget exposes custom content, you need to specify additional information to allow the content to be edited within the designer. "))</p>

    <div class="row">
        <div class="btn-toolbar col-md-12">
            <div class="btn-group">
                @Html.Bootstrap().Button("btnNew").ButtonSize(BootstrapUnits.ButtonSize.Small).Text("NewEntry.Text", "New Entry", true).Icon("glyphicon glyphicon-plus")
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-bordered table-condensed" id="@Model.GetId("ItemTable")">
                <thead>
                    <tr>
                        <th style="width: 62px"></th>
                        <th>@Model.GetText("Category.Text", "Category")</th>
                        <th>@Model.GetText("Name.Text", "Name")</th>
                        <th>@Model.GetText("FullName.Text", "Full Name")</th>
                        <th>@Model.GetText("Title.Text", "Title")</th>
                    </tr>
                </thead>
                <tbody id="@Model.GetId("ItemList")"></tbody>
            </table>
            <script id="@Model.GetId("ItemListTemplate")" type="text/html">
                <tr>
                    <td>
                        <div class="btn-group">
                            @Html.Bootstrap().Button().DataAttribute("id", "{{:Id}}").DataAttribute("action", "edit").Icon("glyphicon glyphicon-pencil").ButtonSize(BootstrapUnits.ButtonSize.ExtraSmall)
                            @Html.Bootstrap().Button().DataAttribute("id", "{{:Id}}").DataAttribute("action", "delete").Icon("glyphicon glyphicon-trash").ButtonSize(BootstrapUnits.ButtonSize.ExtraSmall)
                        </div>
                    </td>
                    <td>{{:Category}}</td>
                    <td>{{:Name}}</td>
                    <td>{{:FullName}}</td>
                    <td>{{:Title}}</td>
                </tr>
            </script>
        </div>
    </div>
    <div id="@Model.GetId("Dialog")" data-target="#@Model.GetId("Dialog")" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    @Model.GetText("EditDialogText.Text", "Edit Manifest")
                </div>
                <div class="modal-body">
                    @{Html.RenderPartial("WidgetHeader", Model);}

                    @(Html.Bootstrap().Tabs(new List<Bootstrap.Controls.BootstrapTab>() 
                    { 
                        new Bootstrap.Controls.BootstrapTab() { Id = @Model.GetId("GeneralTab"), Text = @Model.GetText("General.Text", "General"), Active = true},
                        new Bootstrap.Controls.BootstrapTab() { Id = @Model.GetId("ContentTab"), Text = @Model.GetText("Content.Text", "Content")}
                    }))
                    
                    <div class="tab-content">
                        <div class="form-horizontal tab-pane active" id="@Model.GetId("GeneralTab")">
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Name.Text", "Name").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Name").Required(), BootstrapUnits.GridSize.MediumDevice9)
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Title.Text", "Title").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Title").Required(), BootstrapUnits.GridSize.MediumDevice9)
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("Category.Text", "Category").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("Category"), BootstrapUnits.GridSize.MediumDevice9)
                        </div>
                        <div class="form-horizontal tab-pane" id="@Model.GetId("ContentTab")">
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("ContentProvider.Text", "Content Provider").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("ContentProvider"), BootstrapUnits.GridSize.MediumDevice9)
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("EditorType.Text", "Editor Type").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("EditorType"), BootstrapUnits.GridSize.MediumDevice9)
                            @Html.Bootstrap().FormGroup(Html.Bootstrap().Label("EditorPath.Text", "Editor Path").GridSize(BootstrapUnits.GridSize.MediumDevice3), Html.Bootstrap().TextBox().DataColumn("EditorPath"), BootstrapUnits.GridSize.MediumDevice9)
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @Html.Bootstrap().Button("btnSave").ButtonStyle(BootstrapUnits.ButtonStyle.Primary).Text("Save.Text", "Save", true)
                    @Html.Bootstrap().Button().Text("Cancel.Text", "Cancel", true).DataAttribute("dismiss", "modal")
                </div>
            </div>
        </div>
    </div>
</div>

